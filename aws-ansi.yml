- name: create ec2 instance using ansible
  hosts: local
  connection: local
  become: yes
  vars:
    subnetid: "subnet-0f3fd2d569badbdac"
    inst: "t2.micro"
    secg: "sg-09c956a01686bdc1d"
    image: "ami-0b4f379183e5706b9"
    reg: "us-east-1a"
    instances:
      - mysql
      - backend
      - frontend
    zone: chocojohns.online 
  tasks:
    - name: installing boto3 and botocore
      ansible.builtin.pip: 
        name: 
          - boto3
          - botocore
        executable: pip3.6
    - name: create aws ec2 using ansible
      amazon.aws.ec2_instance:
        name: "{{ item }}"
        vpc_subnet_id: "{{ subnetid }}"
        instance_type: "{{ inst }}"
        security_group: "{{ secg }}"
        image_id: "{{ image }}"
        region: "{{ reg }}"
      loop: "{{ instances }}"
      register: ec2_instances

    - name: print the output 
      ansible.builtin.debug:
        msg: "{{ ec2_instances}}"


    - name: creating route53 records
      amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ item.item }}.{{ zone }}"
        type: A
        ttl: 1
        value: "{{ item.instances[0].private_ip_address }}"
        wait: true
        overwrite: true
      loop: "{{ ec2_instances.results }}"


    - name: create r53 public record for frontend
      amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ zone }}" #daws81s.online
        type: A
        ttl: 1
        value: "{{ item.instances[0].public_ip_address }}"
        wait: true
        overwrite: true
      loop: "{{ ec2_instances.results }}"
      when: item.item == "frontend"